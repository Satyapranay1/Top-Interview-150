class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        int n = nums.length;
        List<List<Integer>> res = new ArrayList<>();
        for (int i = 0; i < n; i++){
            if (i > 0 && nums[i] == nums[i - 1]) continue;
            twoSum(res,nums,-nums[i],i + 1,n - 1);
        }
        return res;
    }

    public void twoSum(List<List<Integer>> res,int[] nums,int target,int left,int right){
        int f1 = nums[left - 1];
        while (left < right){
            int val = nums[left] + nums[right];
            if (val < target){
                left++;
            }
            else if (val > target){
                right--;
            }
            else{
                res.add(Arrays.asList(f1,nums[left],nums[right]));
                while (left < right && nums[left] == nums[left + 1]) left++;
                while (left < right && nums[right] == nums[right - 1]) right--; 
                left++;
                right--;
            }
        }
    }
}
